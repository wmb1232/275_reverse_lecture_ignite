
buildscript {
    dependencies {
        classpath fileTree(dir: 'libs', include: '*.jar')
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id "com.github.spotbugs" version "1.6.2"
}

repositories {
    jcenter()
}

dependencies {
    runtime fileTree(dir: 'libs', include: '*.jar')
    compile fileTree(dir: 'libs', include: '*.jar')
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'org.apache.ignite', name: 'ignite-core', version: '2.7.6'
    compile group: 'org.apache.ignite', name: 'ignite-spring', version: '2.7.6'
    testCompile group: 'junit', name: 'junit', version: '4.+'

}

shadowJar {
    baseName = 'apacheignitedemo'
}

/* Spot Bugs Configuration */

spotbugs {
    ignoreFailures = true
    toolVersion = "3.1.3"
    sourceSets=[sourceSets.main]
    excludeFilter = file("config/spotbugs/excludeFilter.xml")
    reportsDir = file("$project.buildDir/reports/spotbugs")
    effort = "max"
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
      }
}

/* Smart Smells Configuration */

repositories {
    maven {
        url  "http://dl.bintray.com/arturbosch/code-analysis"
    }
}

configurations {
    smartsmells
}

task smartsmells(type: JavaExec) {
    main = "io.gitlab.arturbosch.smartsmells.Main"
    classpath = configurations.smartsmells
    def input = "$project.projectDir.absolutePath/src/main"
    def baseDir = "$project.projectDir/build/reports/"
    def output = "$baseDir/smells/smartsmells.xml"
    def params = [ '-i', input, '-o', output, '-fs', '-f', ".*/test/.*"]
    args(params)
}

dependencies {
    smartsmells 'io.gitlab.arturbosch.smartsmells:SmartSmells:1.0.0.RC8'
}





